# Generate SSH keys
# -----------------
# ssh-keygen -t rsa -C "your.email@example.com" -b 4096
# $home_directory
# - name: Get the username running the deploy
#   local_action: command whoami
#   register: username_on_the_host
#   become: false

# - name: Generate SSH keys for local user
#   user:
#     name: "{{ user }}"
#     generate_ssh_key: yes
#     ssh_key_bits: 2048
#     ssh_key_file: .ssh/aaaaaaaaaa
    # ssh_key_file: ~/.ssh/id_rsa.cleanify.gitlab

# - name: Set authorized key for local user
#   authorized_key:
#     user: username_on_the_host
#     state: present
#     key: "{{ lookup('file', '/home/charlie/.ssh/id_rsa.pub') }}"

# - name: Check SSH public key
#   # command: /bin/cat ~/.ssh/id_rsa.cleanify.gitlab.pub
#   command: /bin/cat ~/.ssh/config
#   register: cat
#   changed_when: false

# - name: Print SSH public key
#   debug: var=cat.stdout

# - name: Wait for user to copy SSH public key
#   pause: prompt="Please add the SSH public key above to your GitLab account"


# Create a directory if it doesn't exist
# --------------------------------------
- name: Create git folder for development
  file:
    path: ~/git
    state: directory
    mode: 0755
- name: Create git-public folder for development
  file:
    path: ~/git-public
    state: directory
    mode: 0755
- name: Create git-private folder for development
  file:
    path: ~/git-private
    state: directory
    mode: 0755
- name: Create git-community folder for development
  file:
    path: ~/git-community
    state: directory
    mode: 0755

- name: Setup known_hosts permission
  file:
    path: ~/.ssh/known_hosts
    state: file
    mode: 0755

- name: Ensure github.com is a known host
  lineinfile:
    dest: ~/.ssh/known_hosts
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    regexp: "^github\\.com"

- name: Ensure gitlab.com is a known host
  lineinfile:
    dest: ~/.ssh/known_hosts
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa gitlab.com') }}"
    regexp: "^gitlab\\.com"

# Cloning repos
# -------------
- name: Cloning repos + submodules
  git:
    repo: '{{ item.src }}'
    dest: '{{ item.dest }}'
    force: yes
    version: "{{ item.version | default('master') }}"
    recursive: true
    key_file: ~/.ssh/id_rsa
    accept_hostkey: yes
  with_items: >
    {{ repos }}


# Yarn install
# ------------
- name: Install dependencies
  shell: cd {{ item.dest }} && find . -type f -name package.json && yarn
  with_items: >
    {{ repos }}
